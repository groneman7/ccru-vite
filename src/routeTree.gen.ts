/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CalendarIndexRouteImport } from './routes/calendar/index'
import { Route as AdminPositionsRouteImport } from './routes/admin/positions'
import { Route as CalendarEventsEventIdRouteImport } from './routes/calendar/events.$eventId'
import { Route as CalendarYearMonthRouteImport } from './routes/calendar/$year.$month'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarIndexRoute = CalendarIndexRouteImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminPositionsRoute = AdminPositionsRouteImport.update({
  id: '/admin/positions',
  path: '/admin/positions',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarEventsEventIdRoute = CalendarEventsEventIdRouteImport.update({
  id: '/calendar/events/$eventId',
  path: '/calendar/events/$eventId',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarYearMonthRoute = CalendarYearMonthRouteImport.update({
  id: '/calendar/$year/$month',
  path: '/calendar/$year/$month',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/positions': typeof AdminPositionsRoute
  '/calendar': typeof CalendarIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/events/$eventId': typeof CalendarEventsEventIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin/positions': typeof AdminPositionsRoute
  '/calendar': typeof CalendarIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/events/$eventId': typeof CalendarEventsEventIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin/positions': typeof AdminPositionsRoute
  '/calendar/': typeof CalendarIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/events/$eventId': typeof CalendarEventsEventIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/positions'
    | '/calendar'
    | '/calendar/$year/$month'
    | '/calendar/events/$eventId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin/positions'
    | '/calendar'
    | '/calendar/$year/$month'
    | '/calendar/events/$eventId'
  id:
    | '__root__'
    | '/'
    | '/admin/positions'
    | '/calendar/'
    | '/calendar/$year/$month'
    | '/calendar/events/$eventId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminPositionsRoute: typeof AdminPositionsRoute
  CalendarIndexRoute: typeof CalendarIndexRoute
  CalendarYearMonthRoute: typeof CalendarYearMonthRoute
  CalendarEventsEventIdRoute: typeof CalendarEventsEventIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/positions': {
      id: '/admin/positions'
      path: '/admin/positions'
      fullPath: '/admin/positions'
      preLoaderRoute: typeof AdminPositionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar/events/$eventId': {
      id: '/calendar/events/$eventId'
      path: '/calendar/events/$eventId'
      fullPath: '/calendar/events/$eventId'
      preLoaderRoute: typeof CalendarEventsEventIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar/$year/$month': {
      id: '/calendar/$year/$month'
      path: '/calendar/$year/$month'
      fullPath: '/calendar/$year/$month'
      preLoaderRoute: typeof CalendarYearMonthRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminPositionsRoute: AdminPositionsRoute,
  CalendarIndexRoute: CalendarIndexRoute,
  CalendarYearMonthRoute: CalendarYearMonthRoute,
  CalendarEventsEventIdRoute: CalendarEventsEventIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
